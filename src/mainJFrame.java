/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import beeconjar.BEECODE;
import beeconjar.Bee;
import beeconjar.BeeButton;
import beeconjar.BeeCallback;
import beeconjar.HoneyComb;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Dayyoung
 */
public class mainJFrame extends javax.swing.JFrame {

    private boolean lightState[];
    private JLabel lightLabels[];
    Bee IoTBee;
    /**
     * Creates new form NewJFrame
     */
    public mainJFrame() {
        initComponents();
        
        lightState = new boolean[6];
        lightLabels = new JLabel[6];
        
        lightLabels[0] = lightLabel1;
        lightLabels[1] = lightLabel2;
        lightLabels[2] = lightLabel3;
        lightLabels[3] = lightLabel4;
        lightLabels[4] = lightLabel5;
        lightLabels[5] = lightLabel6;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        TemperatureNowLabel = new javax.swing.JLabel();
        TemperatureProgress = new javax.swing.JProgressBar();
        TemperatureSetLabel = new javax.swing.JLabel();
        TemperatureSlider = new javax.swing.JSlider();
        HumidityNowLabel = new javax.swing.JLabel();
        HumidityProgress = new javax.swing.JProgressBar();
        HumiditySetLabel = new javax.swing.JLabel();
        HumiditySlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        lightLabel1 = new javax.swing.JLabel();
        lightLabel2 = new javax.swing.JLabel();
        lightLabel3 = new javax.swing.JLabel();
        lightLabel4 = new javax.swing.JLabel();
        lightLabel5 = new javax.swing.JLabel();
        lightLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ConnectLabel = new javax.swing.JLabel();
        ConnectButton = new javax.swing.JButton();
        BeeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SmartHome by BeeconJS.com");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Copyright by BeeconJS.com @ 2015 All Rights Reserved.");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 570, -1, -1));

        TemperatureNowLabel.setText("Temperature Now : ");
        jPanel1.add(TemperatureNowLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 180, -1, -1));
        jPanel1.add(TemperatureProgress, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, 170, 20));

        TemperatureSetLabel.setText("Temperature Set :");
        jPanel1.add(TemperatureSetLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 230, -1, -1));

        TemperatureSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TemperatureSliderStateChanged(evt);
            }
        });
        jPanel1.add(TemperatureSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 250, 170, -1));

        HumidityNowLabel.setText("Humidity Now : ");
        jPanel1.add(HumidityNowLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, -1, -1));
        jPanel1.add(HumidityProgress, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 330, 170, 23));

        HumiditySetLabel.setText("Humidity Set : ");
        jPanel1.add(HumiditySetLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 360, -1, -1));

        HumiditySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                HumiditySliderStateChanged(evt);
            }
        });
        jPanel1.add(HumiditySlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 380, 170, 35));

        jLabel3.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/beehome_title.png"))); // NOI18N
        jLabel3.setText("- SmartHome Monitoring Service -");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 380, 110));

        lightLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
        jPanel1.add(lightLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        lightLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
        jPanel1.add(lightLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, -1));

        lightLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
        jPanel1.add(lightLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, -1, -1));

        lightLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
        jPanel1.add(lightLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, -1, -1));

        lightLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
        jPanel1.add(lightLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, -1, -1));

        lightLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
        jPanel1.add(lightLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/myhome_off.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        ConnectLabel.setText("Not contected.");
        jPanel1.add(ConnectLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 260, 20));

        ConnectButton.setText("Connect");
        ConnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ConnectButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 110, 30));

        BeeButton.setText("BEECODE");
        BeeButton.setEnabled(false);
        BeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BeeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(BeeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, 110, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void ConnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectButtonActionPerformed
        // TODO add your handling code here:
        ConnectButton.setText("Connecting...");
    
        if(!IsConnected)
        {   
        int uniqueKey = 107;    
            
        IoTBee = new Bee("IoTBee",107);

        BeeButton beeButton1 = new BeeButton(1, "L1") {
            @Override
            public void action() {
                // TODO Auto-generated method stub
                System.out.println("L1");
                if(lightLabel1.getIcon().toString().contains("off"))
                {
                    lightLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_on.png"))); // NOI18N
                    lightState[0]=true;
                }
                else
                {
                    lightLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
                    lightState[0]=false;
                }
                notifyChange();
            }
        };
        BeeButton beeButton2 = new BeeButton(2, "L2") {
            @Override
            public void action() {
                // TODO Auto-generated method stub
                System.out.println("L2");
                if(lightLabel2.getIcon().toString().contains("off"))
                {
                    lightLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_on.png"))); // NOI18N
                    lightState[1]=true;
                }
                else
                {
                    lightLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
                    lightState[1]=false;
                }
                notifyChange();
            }
        };              
        BeeButton beeButton3 = new BeeButton(3, "L3") {        
            @Override
            public void action() {
                // TODO Auto-generated method stub
                System.out.println("L3");
                if(lightLabel3.getIcon().toString().contains("off"))
                {
                    lightLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_on.png"))); // NOI18N
                    lightState[2]=true;
                }
                else
                {
                    lightLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
                    lightState[2]=false;
                }
                notifyChange();
            }
        };      
          BeeButton beeButton4 = new BeeButton(4, "L4") {        
            @Override
            public void action() {
                // TODO Auto-generated method stub
                System.out.println("L4");
                if(lightLabel4.getIcon().toString().contains("off"))
                {
                    lightLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_on.png"))); // NOI18N
                    lightState[3]=true;
                }
                else
                {
                    lightLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
                    lightState[3]=false;
                }
                notifyChange();
            }           
        };            
        BeeButton beeButton5 = new BeeButton(5, "L5") {        
            @Override
            public void action() {
                // TODO Auto-generated method stub

                System.out.println("L5");
                if(lightLabel5.getIcon().toString().contains("off"))
                {
                    lightLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_on.png"))); // NOI18N
                    lightState[4]=true;
                }
                else
                {
                    lightLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
                    lightState[4]=false;
                }
                notifyChange();
            }           
        };          
        BeeButton beeButton6 = new BeeButton(6, "L6") {        
            @Override
            public void action() {
                // TODO Auto-generated method stub
                System.out.println("L6");
                if(lightLabel6.getIcon().toString().contains("off"))
                {
                    lightLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_on.png"))); // NOI18N
                    lightState[5]=true;
                }
                else
                {
                    lightLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N
                    lightState[5]=false;
                }
                notifyChange();
            }           
        };          
        
        IoTBee.addButton(beeButton1);
        IoTBee.addButton(beeButton2);
        IoTBee.addButton(beeButton3);
        IoTBee.addButton(beeButton4);
        IoTBee.addButton(beeButton5);
        IoTBee.addButton(beeButton6);
        
            try {
                JSONObject jSONObject = new JSONObject();
                jSONObject.put("lightState",lightState);
                IoTBee.addData(jSONObject);
            } catch (JSONException ex) {
                Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        honeyComb= new HoneyComb();

        BeeCallback beeCallback = new BeeCallback()
        {
                @Override
                public void serverOn(String url) {
                    super.serverOn(url); //To change body of generated methods, choose Tools | Templates.
                    ConnectButton.setText("Disconnect");
                    ConnectLabel.setText("Connected to : "+url);
                    BeeButton.setEnabled(true);                
                    
                    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/myhome.png"))); // NOI18N
                    IsConnected = true;

                    if(natureThread==null)
                    {   
                        natureThread = new NatureThread();                
                        natureThread.start();
                    }
                    TemperatureSet = 22;
                    TemperatureSlider.setValue(TemperatureSet);

                    HumiditySet = 50;              
                    HumiditySlider.setValue(HumiditySet);
                    
                    onAllLight();         
                }

                @Override
                public void serverOff() {
                    super.serverOff(); //To change body of generated methods, choose Tools | Templates.

                    ConnectButton.setText("Connect");
                    ConnectLabel.setText("Not contected.");
                    BeeButton.setEnabled(false);

                    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/myhome_off.png"))); // NOI18N
                    IsConnected = false;             

                    natureThread = null;

                    TemperatureNowLabel.setText("Temperature Now : ");
                    TemperatureSet = 0;
                    TemperatureSlider.setValue(TemperatureSet);
                    TemperatureProgress.setValue(TemperatureSet);

                    HumidityNowLabel.setText("Humidity Now : ");
                    HumiditySet = 0;              
                    HumiditySlider.setValue(HumiditySet);
                    HumidityProgress.setValue(TemperatureSet);   
                    
                    offAllLight();
                }         

                @Override
                public void onRecivedBeecode(String BEECODE) {
                    super.onRecivedBeecode(BEECODE); //To change body of generated methods, choose Tools | Templates.
                    MyBEECODE = BEECODE;
                    //Server On
                    notifyChange();
                }
                @Override
                public void onFindBee(Bee bee) {
                    super.onFindBee(bee); //To change body of generated methods, choose Tools | Templates.
                }
                @Override
                public void onHeyBee(String BEECODE, JSONObject hey) {
                    super.onHeyBee(BEECODE, hey); //To change body of generated methods, choose Tools | Templates.
                    if(IoTBee.BEECODE.equals(BEECODE))
                    {
                        if(hey.has("temperatureSet"))
                        {
                            try {
                                TemperatureSet = hey.getInt("temperatureSet");
                                TemperatureSlider.setValue(TemperatureSet);
                            } catch (JSONException ex) {
                                Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } 
                        if(hey.has("humiditySet"))
                        {
                            try {
                                HumiditySet = hey.getInt("humiditySet");
                                HumiditySlider.setValue(HumiditySet);
                            } catch (JSONException ex) {
                                Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }        
                    }                   
                }
                
        };
        honeyComb.setBeeCallback(beeCallback);    
        honeyComb.setRegion(BEECODE.DEFAULT);
        honeyComb.addBee(IoTBee);      
        honeyComb.hangOn();                        
        }
        else 
        {
            if(honeyComb.isHangOn())
            {
                notifyOff(); //Call before Disconnet.
                honeyComb.hangOff();                
            }
        }        
    }//GEN-LAST:event_ConnectButtonActionPerformed
    
    
    private void TemperatureSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TemperatureSliderStateChanged
        // TODO add your handling code here:        
        if (!TemperatureSlider.getValueIsAdjusting()) 
        {
            TemperatureSet = (int)TemperatureSlider.getValue();
            System.out.println("Temperature Set : " + TemperatureSet + "C");   

        }
        
    }//GEN-LAST:event_TemperatureSliderStateChanged

    private void HumiditySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_HumiditySliderStateChanged
        // TODO add your handling code here:
        if (!HumiditySlider.getValueIsAdjusting()) 
        {
            HumiditySet = (int)HumiditySlider.getValue();
            System.out.println("HumiditySet Set : " + HumiditySet + "%");         
                   
        }
    }//GEN-LAST:event_HumiditySliderStateChanged

    private void BeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BeeButtonActionPerformed
        // TODO add your handling code here:
    //custom title, warning icon
    JOptionPane.showMessageDialog(this,
        "BEECODE : " + MyBEECODE,
        "BEECODE",
        JOptionPane.PLAIN_MESSAGE);
        
    }//GEN-LAST:event_BeeButtonActionPerformed
    private int TemperatureNow = 0;                
    private int TemperatureSet = 0;    
    private int HumidityNow = 0;                
    private int HumiditySet = 0; 
    private String MyBEECODE ="";
    
    private NatureThread natureThread;
    private boolean IsConnected = false;
    HoneyComb honeyComb;

    class NatureThread extends Thread {
        
        @Override
        public void run() {
            super.run();
            while (IsConnected) {               
                
                int TemperatureNowMin = TemperatureSet-5;
                if(TemperatureNowMin<0)
                    TemperatureNowMin = 0;
                
                int TemperatureNowMax = TemperatureSet+5;
                if(TemperatureNowMax>100)
                    TemperatureNowMax = 100;
                
                TemperatureNow = randInt(TemperatureNowMin, TemperatureNowMax);
                System.out.println("Temperature Now : " + TemperatureNow + "C");                
                TemperatureProgress.setValue(TemperatureNow);
                TemperatureNowLabel.setText("Temperature Now : " + TemperatureNow + "C");
                
                if(honeyComb.isHangOn())
                {
                    try {                            
                        JSONObject jSONObject = new JSONObject();
                        jSONObject.putOpt("TemperatureNow", TemperatureNow);
                        honeyComb.heyBee(IoTBee.BEECODE,jSONObject);
                    } catch (JSONException ex) {
                        Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }                    
                }
                
                int HumidityNowMin = HumiditySet-5;
                if(HumidityNowMin<0)
                    HumidityNowMin = 0;                
                
                int HumidityNowMax = HumiditySet+5;
                if(HumidityNowMax>100)
                    HumidityNowMax = 100;         
                
                HumidityNow = randInt(HumidityNowMin, HumidityNowMax);
                System.out.println("Humidity Now : "+ HumidityNow +"%");
                HumidityProgress.setValue(HumidityNow);
                HumidityNowLabel.setText("Humidity Now : "+ HumidityNow +"%");
                
                if(honeyComb.isHangOn())
                {
                    try {                            
                        JSONObject jSONObject = new JSONObject();
                        jSONObject.putOpt("HumidityNow", HumidityNow);
                        honeyComb.heyBee(IoTBee.BEECODE,jSONObject);
                    } catch (JSONException ex) {
                        Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }                    
                }
                
                try { Thread.sleep(1000);
                } catch (InterruptedException e) {
                   // e.printStackTrace();
                }
            }
            }
        }   
    
/**
 * Returns a pseudo-random number between min and max, inclusive.
 * The difference between min and max can be at most
 * <code>Integer.MAX_VALUE - 1</code>.
 *
 * @param min Minimum value
 * @param max Maximum value.  Must be greater than min.
 * @return Integer between min and max, inclusive.
 * @see java.util.Random#nextInt(int)
 */
public int randInt(int min, int max) {

    // NOTE: Usually this should be a field rather than a method
    // variable so that it is not re-seeded every call.
    Random rand = new Random();

    // nextInt is normally exclusive of the top value,
    // so add 1 to make it inclusive
    int randomNum = rand.nextInt((max - min) + 1) + min;

    return randomNum;
}
private void onAllLight()
{
    for (int i = 0; i < lightState.length; i++) {     
        if(lightState[i])       
            lightLabels[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_on.png"))); // NOI18N  
        else            
            lightLabels[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N  
    }        
}    

private void offAllLight()
{
    for (int i = 0; i < lightState.length; i++) {    
        lightLabels[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/light_off.png"))); // NOI18N  
    }        
}

private void notifyChange()
{
try {                            
    JSONObject jSONObject = new JSONObject();
    jSONObject.putOpt("serverState", "ON");
    jSONObject.putOpt("lightState", lightState);     
    honeyComb.heyBee(IoTBee.BEECODE,jSONObject);
} catch (JSONException ex) {
    Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
}                                  
}
private void notifyOff()
{
try {                            
    JSONObject jSONObject = new JSONObject();
    jSONObject.putOpt("serverState", "OFF");
    jSONObject.putOpt("lightState", lightState);     
    honeyComb.heyBee(IoTBee.BEECODE,jSONObject);
} catch (JSONException ex) {
    Logger.getLogger(mainJFrame.class.getName()).log(Level.SEVERE, null, ex);
}                                  
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new mainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BeeButton;
    private javax.swing.JButton ConnectButton;
    private javax.swing.JLabel ConnectLabel;
    private javax.swing.JLabel HumidityNowLabel;
    private javax.swing.JProgressBar HumidityProgress;
    private javax.swing.JLabel HumiditySetLabel;
    private javax.swing.JSlider HumiditySlider;
    private javax.swing.JLabel TemperatureNowLabel;
    private javax.swing.JProgressBar TemperatureProgress;
    private javax.swing.JLabel TemperatureSetLabel;
    private javax.swing.JSlider TemperatureSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lightLabel1;
    private javax.swing.JLabel lightLabel2;
    private javax.swing.JLabel lightLabel3;
    private javax.swing.JLabel lightLabel4;
    private javax.swing.JLabel lightLabel5;
    private javax.swing.JLabel lightLabel6;
    // End of variables declaration//GEN-END:variables
}
